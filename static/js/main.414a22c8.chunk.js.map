{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","createTable","table","i","state","rows","children","j","columns","push","renderSquare","squares","Array","fill","xIsNext","this","slice","calculateWinner","setState","handleClick","status","winner","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAIE,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IA8BRK,YAAc,WAIZ,IAHA,IAAIC,EAAQ,GAGHC,EAAI,EAAGA,EAAI,EAAKC,MAAMC,KAAMF,IAAK,CAGxC,IAFA,IAAIG,EAAW,GAENC,EAAI,EAAGA,EAAI,EAAKH,MAAMI,QAASD,IACtCD,EAASG,KAAK,EAAKC,aAAaP,EAAE,EAAKC,MAAMI,QAAQD,IAGvDL,EAAMO,KAAK,yBAAKZ,UAAU,aAAaS,IAEzC,OAAOJ,GA1CP,EAAKE,MAAQ,CACXO,QAASC,MAAMhB,EAAMS,KAAOT,EAAMY,SAASK,KAAK,MAChDR,KAAMT,EAAMS,KACZG,QAASZ,EAAMY,QACfM,SAAS,GANM,E,wDAUPX,GACV,IAAMQ,EAAUI,KAAKX,MAAMO,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQR,KAGxCQ,EAAQR,GAAKY,KAAKX,MAAMU,QAAU,IAAM,IACxCC,KAAKG,SAAS,CACZP,QAASA,EACTG,SAAUC,KAAKX,MAAMU,a,mCAIZX,GAAI,IAAD,OACd,OACE,kBAACR,EAAD,CACEI,MAAOgB,KAAKX,MAAMO,QAAQR,GAC1BL,QAAS,kBAAM,EAAKqB,YAAYhB,Q,+BAsBpC,IACIiB,EADEC,EAASJ,EAAgBF,KAAKX,MAAMO,SAQ1C,OALES,EADEC,EACO,WAAaA,EAEb,iBAAmBN,KAAKX,MAAMU,QAAU,IAAM,KAIvD,6BACE,yBAAKjB,UAAU,UAAUuB,GACxBL,KAAKd,mB,GA5DMqB,IAAMC,WAkEpBC,E,uKAEF,OACE,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CAAOK,KAAK,KAAKG,QAAQ,QAE3B,yBAAKX,UAAU,aACb,8BACA,mC,GATSyB,IAAMC,WAwBzB,SAASN,EAAgBN,GAWvB,IAVA,IAAMc,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAtB,EAAI,EAAGA,EAAIsB,EAAMC,OAAQvB,IAAK,CAAC,IAAD,cACnBsB,EAAMtB,GADa,GAC9BwB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GACpE,OAAOlB,EAAQgB,GAGnB,OAAO,KAvBTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.414a22c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n  function Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(props.rows * props.columns).fill(null),\r\n        rows: props.rows,\r\n        columns: props.columns,\r\n        xIsNext: true,\r\n      };\r\n    }\r\n\r\n    handleClick(i) {\r\n      const squares = this.state.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        squares: squares,\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n    }\r\n\r\n    renderSquare(i) {\r\n      return (\r\n        <Square \r\n          value={this.state.squares[i]}\r\n          onClick={() => this.handleClick(i)} \r\n        />\r\n      );\r\n    }\r\n\r\n    createTable = () => {\r\n      let table = []\r\n  \r\n      // Outer loop to create parent\r\n      for (let i = 0; i < this.state.rows; i++) {\r\n        let children = []\r\n        //Inner loop to create children\r\n        for (let j = 0; j < this.state.columns; j++) {\r\n          children.push(this.renderSquare(i*this.state.columns+j))\r\n        }\r\n        //Create the parent and add the children\r\n        table.push(<div className=\"board-row\">{children}</div>)\r\n      }\r\n      return table\r\n    }\r\n  \r\n    render() {\r\n      const winner = calculateWinner(this.state.squares);\r\n      let status;\r\n      if (winner) {\r\n        status = 'Winner: ' + winner;\r\n      } else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          {this.createTable()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board rows=\"10\" columns=\"10\"/>\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}